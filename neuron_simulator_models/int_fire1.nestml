neuron int_fire1:

  state:
    r integer
  end

  initial_values:
    V_m mV = 0mV
  end

  equations:
    shape I_shape = pA * exp(-t / tau)
    function I pA = convolve(I_shape, pA) + I_e + currents
    V_m' = V_m * (-1./tau) * crutch * I/pF
  end

  parameters:
    tau     ms = 2ms     # Time constant of synaptic current.
    t_ref   ms = 2ms     # Duration of refractory period in ms.
    V_reset mV = 0mV
    V_thr   mV = 1mV
    I_e     pA = 0pA     # Constant external input current in pA.
  end

  internals:
    RefractoryCounts integer = steps(t_ref) # refractory time in steps
    crutch real = 0.05 # This is a number to make `tau` functionality correct. Basically it shouldn't exist but I don't know how to be without it for now.
  end

  input:
    # spikes pA  <- spike
    spikes mV  <- spike
    currents    <- current
  end

  output: spike

  update:
    if r == 0: # neuron not refractory
      integrate_odes()
      V_m += spikes
    else: # neuron is absolute refractory
      r = r - 1
    end

    if V_m >= V_thr: # threshold crossing
      r = RefractoryCounts
      V_m = V_reset
      emit_spike()
    end

  end

end
